# Generated by Django 5.1.3 on 2025-02-06 05:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the category', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='Auto-generated slug for the category URL', unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of the category')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time the category was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time the category was last updated')),
            ],
            options={
                'verbose_name_plural': 'blog categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the tag', max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='Auto-generated slug for the tag URL', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the blog post', max_length=200)),
                ('slug', models.SlugField(blank=True, help_text='Auto-generated slug for the post URL', unique=True)),
                ('content', models.TextField(help_text='Content of the blog post')),
                ('featured_image', models.ImageField(blank=True, help_text='Optional featured image for the post', null=True, upload_to='blog/')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time the post was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time the post was last updated')),
                ('is_published', models.BooleanField(default=False, help_text='Indicates if the blog post is published')),
                ('published_at', models.DateTimeField(blank=True, help_text='Date and time the blog post was published', null=True)),
                ('views_count', models.IntegerField(default=0, help_text='Number of views for the blog post')),
                ('meta_description', models.CharField(blank=True, help_text='Meta description for SEO', max_length=160)),
                ('featured', models.BooleanField(default=False, help_text='Indicates if the blog post is featured')),
                ('author', models.ForeignKey(help_text='Author of the blog post', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(help_text='Categories the post belongs to', related_name='posts', to='blog.category')),
                ('tags', models.ManyToManyField(blank=True, help_text='Tags for the blog post', related_name='posts', to='blog.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Content of the comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time the comment was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time the comment was last updated')),
                ('is_approved', models.BooleanField(default=False, help_text='Indicates if the comment has been approved')),
                ('author', models.ForeignKey(help_text='Author of the comment', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(help_text='The blog post this comment belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True, help_text='Date and time the like was added')),
                ('user', models.ForeignKey(help_text='User that liked the blog post', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(help_text='The blog post that has been liked', on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='blog.post')),
            ],
            options={
                'unique_together': {('post', 'user')},
            },
        ),
    ]
