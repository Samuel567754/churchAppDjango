# Generated by Django 5.1.3 on 2025-02-06 05:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contact', '0001_initial'),
        ('event', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, help_text="Member's phone number.", max_length=20)),
                ('address', models.TextField(blank=True, help_text="Member's full address.")),
                ('date_of_birth', models.DateField(blank=True, help_text="Member's date of birth.", null=True)),
                ('date_joined', models.DateField(auto_now_add=True, help_text='Date when the member joined.')),
                ('baptized', models.BooleanField(default=False, help_text='Indicates if the member is baptized.')),
                ('photo', models.ImageField(blank=True, help_text="Member's profile picture.", null=True, upload_to='members/')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], help_text='Gender of the member.', max_length=1)),
                ('can_lead', models.BooleanField(default=False, help_text='Indicates if the member can lead services (for males only).')),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('user', models.OneToOneField(help_text='The associated user account.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_name', models.CharField(help_text='The name of the family.', max_length=255, unique=True)),
                ('address', models.TextField(blank=True, help_text="The family's address.")),
                ('phone_number', models.CharField(blank=True, help_text="Family's phone number.", max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when the family was registered.')),
                ('head_of_family', models.ForeignKey(help_text='The head of the family (usually an elder or the first member).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='head_of_family', to='membership.member')),
                ('members', models.ManyToManyField(help_text='Members of this family.', related_name='family_members', to='membership.member')),
            ],
            options={
                'verbose_name_plural': 'Families',
                'ordering': ['family_name'],
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_date', models.DateField(help_text='Date when the member joined with this membership.')),
                ('membership_type', models.CharField(choices=[('regular', 'Regular'), ('elder', 'Elder'), ('youth', 'Youth'), ('leader', 'Leader'), ('pastor', 'Pastor')], help_text='The type of membership the member holds.', max_length=255)),
                ('member', models.OneToOneField(help_text='The member with this membership.', on_delete=django.db.models.deletion.CASCADE, to='membership.member')),
            ],
            options={
                'verbose_name_plural': 'Memberships',
            },
        ),
        migrations.CreateModel(
            name='Ministry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/')),
                ('name', models.CharField(help_text='Unique name for the ministry.', max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='Auto-generated from name, used in URLs.', unique=True)),
                ('description', models.TextField(help_text='A detailed description of the ministry.')),
                ('meeting_time', models.CharField(help_text="e.g., 'Sundays 10:00 AM'", max_length=100)),
                ('location', models.CharField(help_text='Where the ministry meets.', max_length=200)),
                ('meeting_schedule', models.TextField(help_text='Detailed meeting schedule, including frequency and special events.')),
                ('age_group', models.CharField(blank=True, help_text="e.g., 'Youth', 'Adults', 'Seniors'", max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the ministry is currently active.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time the ministry was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time the ministry was last updated.')),
                ('leader', models.ForeignKey(blank=True, help_text='The staff member leading this ministry.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_ministries', to='contact.staff')),
            ],
            options={
                'verbose_name_plural': 'Ministries',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='member',
            name='ministries',
            field=models.ManyToManyField(blank=True, help_text='The ministries this member belongs to.', related_name='members', to='membership.ministry'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, help_text='The date and time the attendance was recorded.')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], help_text='The status of attendance.', max_length=50)),
                ('event', models.ForeignKey(blank=True, help_text='The event the attendance is for.', null=True, on_delete=django.db.models.deletion.CASCADE, to='event.event')),
                ('member', models.ForeignKey(help_text='The member whose attendance is recorded.', on_delete=django.db.models.deletion.CASCADE, to='membership.member')),
            ],
            options={
                'verbose_name_plural': 'Attendance Records',
                'unique_together': {('member', 'date', 'event')},
            },
        ),
    ]
